package com.ghzxl.fastindex;

import net.sourceforge.pinyin4j.PinyinHelper;
import net.sourceforge.pinyin4j.format.HanyuPinyinCaseType;
import net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat;
import net.sourceforge.pinyin4j.format.HanyuPinyinToneType;
import net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination;
import android.text.TextUtils;

public class PinYinUtil {
	/**
	 * 获取指定汉字的拼音，会消耗一定的效率，所以该方法不应该被频繁调用
	 * @param chinese
	 * @return
	 */
	public static String getPinYin(String chinese){
		if(TextUtils.isEmpty(chinese))return null;
		
		//控制获取的拼音字母的大小写，是否需要音调
		HanyuPinyinOutputFormat format = new HanyuPinyinOutputFormat();
		format.setCaseType(HanyuPinyinCaseType.UPPERCASE);//设置字母是大写
		format.setToneType(HanyuPinyinToneType.WITHOUT_TONE);
		
		
		//由于PinYin4j只能对单个汉字进行转换，不能直接对词语获取，所以要将字符串
		//分割为字符数组,然后遍历数组，对每个汉字进行获取，最后将拼音拼接起来
		char[] array = chinese.toCharArray();
		StringBuilder builder = new StringBuilder();
		
		//!!嘿#呵O(∩_∩)O~呵嘿!!
		for (int i = 0; i < array.length; i++) {
			char c = array[i];
			//1.过滤掉空格,如果是空格，不处理，进行下次遍历
			if(Character.isWhitespace(c))continue;
			
			//2.判断非中文字符,简单判断中文，中文是占2个字节，一个字节的范围是-128~127;
			//所以说汉字肯定大于127
			if(c > 127){
				//说明有可能是汉字,那么就使用PinYin4j进行获取
				try {
					//由于多音字的存在，所以是数组， 单： {dan , shan}
					String[] pinyinArr = PinyinHelper.toHanyuPinyinStringArray(c, format);
					if(pinyinArr!=null){
						//问题是选择数组的哪个元素：目前做不了，只能选择第0个,因为大部分是单音字，
						//如果真的遇到了多音字，那么只能是后台给予技术支持
						builder.append(pinyinArr[0]);
					}
				} catch (BadHanyuPinyinOutputFormatCombination e) {
					e.printStackTrace();
					//说明不是正确的汉字
				}
			}else {
				//说明肯定不是汉字,一般都是键盘上的能够直接输入的字符，如1,b#,&
				//对于这些东西，我们选择拼接。
				builder.append(c);
			}
		}
		return builder.toString();
	}
}
